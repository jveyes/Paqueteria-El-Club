#!/bin/bash

# ========================================
# PAQUETES EL CLUB v3.1 - Prueba de Restablecimiento de Contrase√±a
# ========================================

echo "üîê Prueba de Funcionalidad de Restablecimiento de Contrase√±a"
echo "============================================================="
echo ""

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funci√≥n para mostrar resultados
show_result() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $2${NC}"
    else
        echo -e "${RED}‚ùå $2${NC}"
    fi
}

echo -e "${BLUE}1. Verificando estado de la aplicaci√≥n...${NC}"
if curl -s -f http://localhost/health > /dev/null; then
    show_result 0 "Aplicaci√≥n funcionando correctamente"
else
    show_result 1 "Aplicaci√≥n no responde"
    exit 1
fi

echo ""
echo -e "${BLUE}2. Verificando p√°gina de restablecimiento de contrase√±a...${NC}"
if curl -s -f http://localhost/auth/forgot-password > /dev/null; then
    show_result 0 "P√°gina de restablecimiento accesible"
else
    show_result 1 "P√°gina de restablecimiento no accesible"
fi

echo ""
echo -e "${BLUE}3. Verificando base de datos...${NC}"
if docker exec paqueteria_v31_app python3 -c "
from src.database.database import engine
from sqlalchemy import text
conn = engine.connect()
result = conn.execute(text('SELECT COUNT(*) FROM users'))
print('Usuarios en BD:', result.fetchone()[0])
conn.close()
" > /dev/null 2>&1; then
    show_result 0 "Base de datos funcionando correctamente"
else
    show_result 1 "Error en base de datos"
fi

echo ""
echo -e "${BLUE}4. Verificando columna profile_photo...${NC}"
if docker exec paqueteria_v31_app python3 -c "
from src.database.database import engine
from sqlalchemy import text
conn = engine.connect()
result = conn.execute(text('SELECT username, profile_photo FROM users LIMIT 1'))
row = result.fetchone()
print('Usuario:', row[0], 'Profile Photo:', row[1])
conn.close()
" > /dev/null 2>&1; then
    show_result 0 "Columna profile_photo accesible"
else
    show_result 1 "Error accediendo a profile_photo"
fi

echo ""
echo -e "${BLUE}5. Verificando configuraci√≥n de correo...${NC}"
if docker exec paqueteria_v31_app python3 -c "
from src.config import settings
print('SMTP_HOST:', settings.smtp_host)
print('SMTP_USER:', settings.smtp_user)
print('SMTP_FROM_EMAIL:', settings.smtp_from_email)
" > /dev/null 2>&1; then
    show_result 0 "Configuraci√≥n de correo cargada"
    
    # Mostrar configuraci√≥n
    echo "   Configuraci√≥n SMTP:"
    docker exec paqueteria_v31_app python3 -c "
from src.config import settings
print('   Host:', settings.smtp_host or 'No configurado')
print('   Usuario:', settings.smtp_user or 'No configurado')
print('   Email origen:', settings.smtp_from_email or 'No configurado')
"
else
    show_result 1 "Error cargando configuraci√≥n de correo"
fi

echo ""
echo -e "${BLUE}6. Verificando logs de la aplicaci√≥n...${NC}"
recent_logs=$(docker logs paqueteria_v31_app --tail 50 2>&1)

if echo "$recent_logs" | grep -q "Base de datos AWS RDS inicializada correctamente"; then
    show_result 0 "Base de datos inicializada correctamente"
else
    show_result 1 "Base de datos no se inicializ√≥ correctamente"
fi

if echo "$recent_logs" | grep -q "column users.profile_photo does not exist"; then
    show_result 1 "Error de columna profile_photo detectado en logs"
else
    show_result 0 "No hay errores de columna profile_photo en logs"
fi

echo ""
echo -e "${BLUE}7. Prueba de funcionalidad completa...${NC}"

# Simular acceso a la p√°gina de restablecimiento
echo "   Probando acceso a la p√°gina..."
page_content=$(curl -s http://localhost/auth/forgot-password)

if echo "$page_content" | grep -q "Restablecer contrase√±a\|Forgot Password\|Recuperar contrase√±a"; then
    show_result 0 "P√°gina de restablecimiento cargando correctamente"
else
    show_result 1 "P√°gina de restablecimiento con problemas"
fi

# Verificar formulario
if echo "$page_content" | grep -q "form\|input\|email"; then
    show_result 0 "Formulario de restablecimiento presente"
else
    show_result 1 "Formulario de restablecimiento no encontrado"
fi

echo ""
echo "============================================================="
echo -e "${BLUE}üìä RESUMEN DE PRUEBAS${NC}"
echo "============================================================="

# Contar pruebas exitosas
success_count=0
total_count=0

# Verificar aplicaci√≥n
if curl -s -f http://localhost/health > /dev/null; then ((success_count++)); fi; ((total_count++))
if curl -s -f http://localhost/auth/forgot-password > /dev/null; then ((success_count++)); fi; ((total_count++))
if docker exec paqueteria_v31_app python3 -c "from src.database.database import engine; print('OK')" > /dev/null 2>&1; then ((success_count++)); fi; ((total_count++))
if docker exec paqueteria_v31_app python3 -c "from src.database.database import engine; conn = engine.connect(); result = conn.execute(text('SELECT profile_photo FROM users LIMIT 1')); conn.close(); print('OK')" > /dev/null 2>&1; then ((success_count++)); fi; ((total_count++))
if docker exec paqueteria_v31_app python3 -c "from src.config import settings; print('OK')" > /dev/null 2>&1; then ((success_count++)); fi; ((total_count++))
if docker logs paqueteria_v31_app --tail 50 2>&1 | grep -q "Base de datos AWS RDS inicializada correctamente"; then ((success_count++)); fi; ((total_count++))
if ! docker logs paqueteria_v31_app --tail 50 2>&1 | grep -q "column users.profile_photo does not exist"; then ((success_count++)); fi; ((total_count++))

echo -e "${GREEN}Pruebas exitosas: $success_count/$total_count${NC}"

if [ $success_count -eq $total_count ]; then
    echo ""
    echo -e "${GREEN}üéâ ¬°LA FUNCIONALIDAD DE RESTABLECIMIENTO DE CONTRASE√ëA EST√Å FUNCIONANDO!${NC}"
    echo -e "${GREEN}‚úÖ La base de datos est√° funcionando correctamente${NC}"
    echo -e "${GREEN}‚úÖ La columna profile_photo est√° disponible${NC}"
    echo -e "${GREEN}‚úÖ La p√°gina es accesible${NC}"
    echo ""
    echo -e "${BLUE}üåê URL de prueba: http://localhost/auth/forgot-password${NC}"
else
    echo ""
    echo -e "${YELLOW}‚ö†Ô∏è  La funcionalidad tiene algunos problemas${NC}"
    echo -e "${YELLOW}üîß Revisa las pruebas fallidas arriba${NC}"
fi

echo ""
echo "============================================================="
echo -e "${BLUE}üöÄ Pr√≥ximos pasos recomendados:${NC}"
echo "1. Probar el formulario de restablecimiento manualmente"
echo "2. Verificar configuraci√≥n de SMTP si es necesario"
echo "3. Configurar notificaciones por correo"
echo "4. Probar flujo completo de restablecimiento"
echo "============================================================="
