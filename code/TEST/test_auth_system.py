#!/usr/bin/env python3
# ========================================
# PAQUETES EL CLUB v3.1 - Test del Sistema de Autenticaci√≥n
# ========================================

import requests
import json
import sys

# Configuraci√≥n
BASE_URL = "http://localhost:8000"
TEST_EMAIL = "admin@papyrus.com.co"
TEST_PASSWORD = "Admin2025!"

def test_health_check():
    """Probar health check"""
    print("üîç Probando health check...")
    try:
        response = requests.get(f"{BASE_URL}/health")
        if response.status_code == 200:
            print("‚úÖ Health check OK")
            return True
        else:
            print(f"‚ùå Health check fall√≥: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå Error en health check: {e}")
        return False

def test_auth_check():
    """Probar verificaci√≥n de autenticaci√≥n"""
    print("üîç Probando verificaci√≥n de autenticaci√≥n...")
    try:
        response = requests.get(f"{BASE_URL}/api/auth/check")
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ Auth check OK - Autenticado: {data.get('is_authenticated', False)}")
            return True
        else:
            print(f"‚ùå Auth check fall√≥: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå Error en auth check: {e}")
        return False

def test_login():
    """Probar login"""
    print("üîç Probando login...")
    try:
        # Usar form data como espera el endpoint
        data = {
            'grant_type': 'password',
            'username': TEST_EMAIL,
            'password': TEST_PASSWORD
        }
        
        response = requests.post(f"{BASE_URL}/api/auth/login", data=data)
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ Login exitoso")
            print(f"   Token: {data.get('access_token', 'N/A')[:20]}...")
            print(f"   Usuario: {data.get('user', {}).get('first_name', 'N/A')}")
            return data.get('access_token')
        else:
            print(f"‚ùå Login fall√≥: {response.status_code}")
            print(f"   Respuesta: {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå Error en login: {e}")
        return None

def test_forgot_password():
    """Probar recuperaci√≥n de contrase√±a"""
    print("üîç Probando recuperaci√≥n de contrase√±a...")
    try:
        data = {
            'email': TEST_EMAIL
        }
        
        response = requests.post(f"{BASE_URL}/api/auth/forgot-password", json=data)
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ Recuperaci√≥n de contrase√±a exitosa")
            print(f"   Mensaje: {data.get('message', 'N/A')}")
            return True
        else:
            print(f"‚ùå Recuperaci√≥n de contrase√±a fall√≥: {response.status_code}")
            print(f"   Respuesta: {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå Error en recuperaci√≥n de contrase√±a: {e}")
        return False

def test_register():
    """Probar registro de usuario"""
    print("üîç Probando registro de usuario...")
    try:
        data = {
            'username': 'testuser',
            'email': 'test@example.com',
            'password': 'TestPassword123!',
            'first_name': 'Test',
            'last_name': 'User',
            'phone': '1234567890',
            'role': 'USER'
        }
        
        response = requests.post(f"{BASE_URL}/api/auth/register", json=data)
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ Registro exitoso")
            print(f"   Usuario: {data.get('username', 'N/A')}")
            return True
        else:
            print(f"‚ùå Registro fall√≥: {response.status_code}")
            print(f"   Respuesta: {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå Error en registro: {e}")
        return False

def main():
    """Ejecutar todas las pruebas"""
    print("üöÄ Iniciando pruebas del sistema de autenticaci√≥n...")
    print("=" * 50)
    
    # Probar health check
    if not test_health_check():
        print("‚ùå El servidor no est√° respondiendo. Aseg√∫rate de que est√© ejecut√°ndose.")
        sys.exit(1)
    
    print()
    
    # Probar auth check
    test_auth_check()
    
    print()
    
    # Probar login
    token = test_login()
    
    print()
    
    # Probar recuperaci√≥n de contrase√±a
    test_forgot_password()
    
    print()
    
    # Probar registro
    test_register()
    
    print()
    print("=" * 50)
    print("‚úÖ Pruebas completadas")
    
    if token:
        print("üéâ El sistema de autenticaci√≥n est√° funcionando correctamente")
        print("üìù Puedes usar las siguientes credenciales para probar:")
        print(f"   Email: {TEST_EMAIL}")
        print(f"   Contrase√±a: {TEST_PASSWORD}")
    else:
        print("‚ö†Ô∏è  Algunas pruebas fallaron. Revisa los logs del servidor.")

if __name__ == "__main__":
    main()
