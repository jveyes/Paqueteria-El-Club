#!/usr/bin/env python3
"""
Script de prueba completa del formulario web de anuncios
Incluye todas las validaciones y casos de uso
"""

import sys
import os
import requests
import json
import time
from pathlib import Path

# Agregar el directorio ra√≠z del proyecto al path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

def test_web_form_complete():
    """Probar el formulario web completo"""
    print("üåê PROBANDO FORMULARIO WEB COMPLETO DE ANUNCIOS")
    print("=" * 70)
    
    base_url = "http://localhost"
    
    # Casos de prueba
    test_cases = [
        {
            "name": "‚úÖ Caso v√°lido - Usuario normal",
            "data": {
                "customer_name": "Mar√≠a Gonz√°lez",
                "guide_number": f"WEBGUIDE{int(time.time())}",
                "phone_number": "3002596319"
            },
            "expected_status": 200
        },
        {
            "name": "‚úÖ Caso v√°lido - Nombre con acentos",
            "data": {
                "customer_name": "Jos√© Mar√≠a L√≥pez",
                "guide_number": f"WEBGUIDE{int(time.time())+1}",
                "phone_number": "3002596319"
            },
            "expected_status": 200
        },
        {
            "name": "‚ùå Caso inv√°lido - Gu√≠a duplicada",
            "data": {
                "customer_name": "Test User",
                "guide_number": "WEBGUIDE1756864800",  # Usar una gu√≠a que ya existe
                "phone_number": "3002596319"
            },
            "expected_status": 400
        },
        {
            "name": "‚ùå Caso inv√°lido - Nombre muy corto",
            "data": {
                "customer_name": "A",
                "guide_number": f"WEBGUIDE{int(time.time())+2}",
                "phone_number": "3002596319"
            },
            "expected_status": 422
        },
        {
            "name": "‚ùå Caso inv√°lido - Tel√©fono muy corto",
            "data": {
                "customer_name": "Usuario Test",
                "guide_number": f"WEBGUIDE{int(time.time())+3}",
                "phone_number": "123"
            },
            "expected_status": 422
        }
    ]
    
    successful_sms = 0
    total_tests = len(test_cases)
    
    for i, test_case in enumerate(test_cases, 1):
        print(f"\nüß™ PRUEBA {i}/{total_tests}: {test_case['name']}")
        print("-" * 60)
        
        try:
            # Enviar formulario
            response = requests.post(
                f"{base_url}/api/announcements/",
                json=test_case["data"],
                headers={"Content-Type": "application/json"}
            )
            
            print(f"üì§ Respuesta: {response.status_code}")
            
            if response.status_code == test_case["expected_status"]:
                print("‚úÖ Estado esperado correcto")
                
                if response.status_code == 200:
                    result = response.json()
                    print(f"   ‚Ä¢ ID: {result['id']}")
                    print(f"   ‚Ä¢ Tracking: {result['tracking_code']}")
                    print(f"   ‚Ä¢ Estado: {result['status']}")
                    
                    # Verificar que el SMS se envi√≥
                    print("   üì± Verificando env√≠o de SMS...")
                    time.sleep(1)
                    
                    # Revisar logs para confirmar SMS
                    print("   üîç Revisar logs del contenedor para confirmar SMS")
                    successful_sms += 1
                    
                elif response.status_code == 400:
                    error_detail = response.json().get("detail", "")
                    print(f"   ‚Ä¢ Error esperado: {error_detail}")
                    
                elif response.status_code == 422:
                    print("   ‚Ä¢ Error de validaci√≥n (esperado)")
                    
            else:
                print(f"‚ùå Estado incorrecto. Esperado: {test_case['expected_status']}")
                if response.status_code != 500:
                    print(f"   ‚Ä¢ Respuesta: {response.text}")
                    
        except Exception as e:
            print(f"‚ùå Error en la prueba: {e}")
        
        # Pausa entre pruebas
        if i < total_tests:
            time.sleep(1)
    
    return successful_sms, total_tests

def test_rate_limiting():
    """Probar rate limiting del formulario"""
    print("\nüö¶ PROBANDO RATE LIMITING")
    print("=" * 50)
    
    base_url = "http://localhost"
    
    print("üìù Enviando 6 anuncios r√°pidamente (l√≠mite: 5 por minuto)...")
    
    for i in range(6):
        test_data = {
            "customer_name": f"Rate Test {i+1}",
            "guide_number": f"RATE{i+1}{int(time.time())}",
            "phone_number": "3002596319"
        }
        
        try:
            response = requests.post(
                f"{base_url}/api/announcements/",
                json=test_data,
                headers={"Content-Type": "application/json"}
            )
            
            if response.status_code == 200:
                result = response.json()
                print(f"   ‚úÖ Anuncio {i+1}: {result['tracking_code']}")
            elif response.status_code == 429:
                print(f"   ‚ö†Ô∏è Rate limit alcanzado en anuncio {i+1}")
                break
            else:
                print(f"   ‚ùå Error {i+1}: {response.status_code}")
                
        except Exception as e:
            print(f"   ‚ùå Error: {e}")
        
        # Pausa m√≠nima entre env√≠os
        time.sleep(0.1)

def main():
    """Funci√≥n principal"""
    print("üöÄ INICIANDO PRUEBAS COMPLETAS DEL FORMULARIO WEB")
    print("=" * 80)
    
    # Probar formulario completo
    successful_sms, total_tests = test_web_form_complete()
    
    # Probar rate limiting
    test_rate_limiting()
    
    # Resumen final
    print("\n" + "=" * 80)
    print("üìä RESUMEN DE PRUEBAS")
    print("=" * 80)
    print(f"‚úÖ SMS enviados exitosamente: {successful_sms}")
    print(f"üìù Total de pruebas: {total_tests}")
    
    if successful_sms > 0:
        print("\nüéâ ¬°SISTEMA SMS FUNCIONANDO CORRECTAMENTE!")
        print("‚úÖ El formulario web est√° operativo")
        print("‚úÖ Los SMS se est√°n enviando a trav√©s de LIWA.co")
        print("‚úÖ Las validaciones est√°n funcionando")
        print("‚úÖ El rate limiting est√° activo")
        
        print("\nüí° PR√ìXIMOS PASOS:")
        print("   1. Abrir http://localhost/announce en el navegador")
        print("   2. Completar el formulario con datos reales")
        print("   3. Verificar que se reciba el SMS")
        print("   4. Confirmar que el modal de √©xito se muestre")
        
    else:
        print("\n‚ùå PROBLEMAS DETECTADOS")
        print("üîß Revisar logs del contenedor para m√°s detalles")
    
    print("\nüèÅ PRUEBAS COMPLETADAS")
    print("=" * 80)

if __name__ == "__main__":
    main()
