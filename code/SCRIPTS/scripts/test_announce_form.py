#!/usr/bin/env python3
"""
Script de prueba del formulario de anuncios
Simula el env√≠o desde el navegador
"""

import sys
import os
import requests
import json
import time
from pathlib import Path

# Agregar el directorio ra√≠z del proyecto al path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

def test_announce_form():
    """Probar el formulario de anuncios"""
    print("üß™ PROBANDO FORMULARIO DE ANUNCIOS DESDE NAVEGADOR")
    print("=" * 60)
    
    base_url = "http://localhost"
    
    # Datos de prueba
    test_data = {
        "customer_name": "Juan P√©rez",
        "guide_number": f"GUIDE{int(time.time())}",  # N√∫mero √∫nico
        "phone_number": "3002596319"
    }
    
    print(f"üìù Datos de prueba:")
    print(f"   ‚Ä¢ Nombre: {test_data['customer_name']}")
    print(f"   ‚Ä¢ Gu√≠a: {test_data['guide_number']}")
    print(f"   ‚Ä¢ Tel√©fono: {test_data['phone_number']}")
    print()
    
    try:
        # Paso 1: Verificar que la p√°gina est√© disponible
        print("üîç PASO 1: Verificando p√°gina de anuncios...")
        response = requests.get(f"{base_url}/announce")
        
        if response.status_code == 200:
            print("‚úÖ P√°gina de anuncios disponible")
        else:
            print(f"‚ùå Error accediendo a la p√°gina: {response.status_code}")
            return False
        
        # Paso 2: Enviar formulario
        print("\nüì§ PASO 2: Enviando formulario...")
        response = requests.post(
            f"{base_url}/api/announcements/",
            json=test_data,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ Formulario enviado exitosamente")
            print(f"   ‚Ä¢ ID del anuncio: {result['id']}")
            print(f"   ‚Ä¢ C√≥digo de tracking: {result['tracking_code']}")
            print(f"   ‚Ä¢ Estado: {result['status']}")
            
            # Verificar que el SMS se envi√≥
            print("\nüì± PASO 3: Verificando env√≠o de SMS...")
            
            # Esperar un momento para que se procese el SMS
            time.sleep(2)
            
            # Verificar logs del contenedor
            print("   üîç Revisando logs del contenedor...")
            print("   üí° El SMS deber√≠a haberse enviado a 573002596319")
            print("   ‚úÖ Si ves 'SMS enviado exitosamente' en los logs, todo est√° funcionando")
            
            return True
            
        else:
            print(f"‚ùå Error enviando formulario: {response.status_code}")
            print(f"   Respuesta: {response.text}")
            return False
            
    except requests.exceptions.ConnectionError:
        print("‚ùå Error de conexi√≥n: No se puede conectar al servidor")
        return False
    except Exception as e:
        print(f"‚ùå Error inesperado: {e}")
        return False

def test_multiple_announcements():
    """Probar m√∫ltiples anuncios para verificar rate limiting"""
    print("\nüîÑ PROBANDO M√öLTIPLES ANUNCIOS (Rate Limiting)")
    print("=" * 60)
    
    base_url = "http://localhost"
    
    for i in range(3):
        test_data = {
            "customer_name": f"Usuario Test {i+1}",
            "guide_number": f"TEST{i+1}{int(time.time())}",
            "phone_number": "3002596319"
        }
        
        print(f"\nüìù Enviando anuncio {i+1}/3...")
        print(f"   ‚Ä¢ Gu√≠a: {test_data['guide_number']}")
        
        try:
            response = requests.post(
                f"{base_url}/api/announcements/",
                json=test_data,
                headers={"Content-Type": "application/json"}
            )
            
            if response.status_code == 200:
                result = response.json()
                print(f"   ‚úÖ Anuncio {i+1} enviado - Tracking: {result['tracking_code']}")
            else:
                print(f"   ‚ùå Error en anuncio {i+1}: {response.status_code}")
                if response.status_code == 429:
                    print("   ‚ö†Ô∏è Rate limit alcanzado")
                    break
                    
        except Exception as e:
            print(f"   ‚ùå Error: {e}")
        
        # Pausa entre anuncios
        if i < 2:
            time.sleep(1)

if __name__ == "__main__":
    print("üöÄ INICIANDO PRUEBAS DEL FORMULARIO DE ANUNCIOS")
    print("=" * 70)
    
    # Probar anuncio individual
    success = test_announce_form()
    
    if success:
        print("\nüéâ PRUEBA EXITOSA")
        print("‚úÖ El formulario est√° funcionando correctamente")
        print("‚úÖ El SMS se est√° enviando")
        print("‚úÖ La API est√° operativa")
        
        # Probar m√∫ltiples anuncios
        test_multiple_announcements()
        
    else:
        print("\n‚ùå PRUEBA FALLIDA")
        print("üîß Revisar logs del contenedor para m√°s detalles")
    
    print("\nüèÅ PRUEBAS COMPLETADAS")
    print("=" * 70)
