"""Initial migration

Revision ID: 001
Revises: 
Create Date: 2025-01-27 12:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Los tipos ENUM ya fueron creados manualmente
    # op.execute("CREATE TYPE userrole AS ENUM ('admin', 'operator', 'user')")
    # op.execute("CREATE TYPE packagestatus AS ENUM ('anunciado', 'recibido', 'en_transito', 'entregado', 'cancelado')")
    # op.execute("CREATE TYPE packagetype AS ENUM ('normal', 'extra_dimensionado')")
    # op.execute("CREATE TYPE packagecondition AS ENUM ('bueno', 'regular', 'malo')")
    # op.execute("CREATE TYPE ratetype AS ENUM ('storage', 'delivery', 'package_type')")
    # op.execute("CREATE TYPE notificationtype AS ENUM ('email', 'sms', 'push')")
    # op.execute("CREATE TYPE notificationstatus AS ENUM ('pending', 'sent', 'failed', 'delivered')")
    # op.execute("CREATE TYPE messagetype AS ENUM ('internal', 'support', 'system')")
    
    # Crear tabla users
    op.create_table('users',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('username', sa.String(length=50), nullable=False),
        sa.Column('email', sa.String(length=100), nullable=False),
        sa.Column('password_hash', sa.String(length=255), nullable=False),
        sa.Column('first_name', sa.String(length=50), nullable=False),
        sa.Column('last_name', sa.String(length=50), nullable=False),
        sa.Column('phone', sa.String(length=20), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('role', sa.Enum('admin', 'operator', 'user', name='userrole'), nullable=True),
        sa.Column('permissions', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column('last_login', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    
    # Crear tabla customers
    op.create_table('customers',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('phone', sa.String(length=20), nullable=False),
        sa.Column('tracking_number', sa.String(length=50), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('tracking_number')
    )
    op.create_index('idx_customer_name', 'customers', ['name'], unique=False)
    op.create_index('idx_customer_phone', 'customers', ['phone'], unique=False)
    op.create_index(op.f('ix_customers_tracking_number'), 'customers', ['tracking_number'], unique=False)
    
    # Crear tabla rates
    op.create_table('rates',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('rate_type', sa.Enum('storage', 'delivery', 'package_type', name='ratetype'), nullable=False),
        sa.Column('base_price', sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column('daily_storage_rate', sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column('delivery_rate', sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column('package_type_multiplier', sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('valid_from', sa.DateTime(), nullable=True),
        sa.Column('valid_to', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Crear tabla packages
    op.create_table('packages',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('tracking_number', sa.String(length=50), nullable=False),
        sa.Column('customer_name', sa.String(length=100), nullable=False),
        sa.Column('customer_phone', sa.String(length=20), nullable=False),
        sa.Column('status', sa.Enum('anunciado', 'recibido', 'en_transito', 'entregado', 'cancelado', name='packagestatus'), nullable=True),
        sa.Column('package_type', sa.Enum('normal', 'extra_dimensionado', name='packagetype'), nullable=True),
        sa.Column('package_condition', sa.Enum('bueno', 'regular', 'malo', name='packagecondition'), nullable=True),
        sa.Column('storage_cost', sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column('delivery_cost', sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column('total_cost', sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column('observations', sa.Text(), nullable=True),
        sa.Column('announced_at', sa.DateTime(), nullable=True),
        sa.Column('received_at', sa.DateTime(), nullable=True),
        sa.Column('delivered_at', sa.DateTime(), nullable=True),
        sa.Column('customer_id', postgresql.UUID(as_uuid=True), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('tracking_number')
    )
    op.create_index(op.f('ix_packages_tracking_number'), 'packages', ['tracking_number'], unique=False)
    op.create_foreign_key(None, 'packages', 'customers', ['customer_id'], ['id'])
    
    # Crear tabla notifications
    op.create_table('notifications',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('package_id', postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column('notification_type', sa.Enum('email', 'sms', 'push', name='notificationtype'), nullable=False),
        sa.Column('message', sa.Text(), nullable=False),
        sa.Column('status', sa.Enum('pending', 'sent', 'failed', 'delivered', name='notificationstatus'), nullable=True),
        sa.Column('sent_at', sa.DateTime(), nullable=True),
        sa.Column('delivery_confirmation', postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_foreign_key(None, 'notifications', 'packages', ['package_id'], ['id'])
    op.create_foreign_key(None, 'notifications', 'users', ['user_id'], ['id'])
    
    # Crear tabla messages
    op.create_table('messages',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('sender_id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('subject', sa.String(length=200), nullable=False),
        sa.Column('content', sa.Text(), nullable=False),
        sa.Column('message_type', sa.Enum('internal', 'support', 'system', name='messagetype'), nullable=True),
        sa.Column('is_read', sa.Boolean(), nullable=True),
        sa.Column('read_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_foreign_key(None, 'messages', 'users', ['sender_id'], ['id'])
    
    # Crear tabla files
    op.create_table('files',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('package_id', postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column('uploaded_by_user_id', postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column('filename', sa.String(length=255), nullable=False),
        sa.Column('file_path', sa.String(length=500), nullable=False),
        sa.Column('file_size', sa.Integer(), nullable=False),
        sa.Column('mime_type', sa.String(length=100), nullable=False),
        sa.Column('upload_date', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_foreign_key(None, 'files', 'packages', ['package_id'], ['id'])
    op.create_foreign_key(None, 'files', 'users', ['uploaded_by_user_id'], ['id'])
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'files', type_='foreignkey')
    op.drop_constraint(None, 'files', type_='foreignkey')
    op.drop_table('files')
    op.drop_constraint(None, 'messages', type_='foreignkey')
    op.drop_table('messages')
    op.drop_constraint(None, 'notifications', type_='foreignkey')
    op.drop_constraint(None, 'notifications', type_='foreignkey')
    op.drop_table('notifications')
    op.drop_constraint(None, 'packages', type_='foreignkey')
    op.drop_index(op.f('ix_packages_tracking_number'), table_name='packages')
    op.drop_table('packages')
    op.drop_table('rates')
    op.drop_index('idx_customer_phone', table_name='customers')
    op.drop_index('idx_customer_name', table_name='customers')
    op.drop_index(op.f('ix_customers_tracking_number'), table_name='customers')
    op.drop_table('customers')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    
    # Eliminar enums
    op.execute("DROP TYPE messagetype")
    op.execute("DROP TYPE notificationstatus")
    op.execute("DROP TYPE notificationtype")
    op.execute("DROP TYPE ratetype")
    op.execute("DROP TYPE packagecondition")
    op.execute("DROP TYPE packagetype")
    op.execute("DROP TYPE packagestatus")
    op.execute("DROP TYPE userrole")
    # ### end Alembic commands ###
