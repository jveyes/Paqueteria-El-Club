version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: paqueteria_v31_postgres
    environment:
      POSTGRES_DB: paqueteria
      POSTGRES_USER: paqueteria_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Optimizaciones para 1GB RAM
      POSTGRES_SHARED_BUFFERS: 128MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 256MB
      POSTGRES_WORK_MEM: 4MB
      POSTGRES_MAINTENANCE_WORK_MEM: 32MB
      POSTGRES_MAX_CONNECTIONS: 50
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ../backups:/var/lib/postgresql/backups
    ports:
      - "5432:5432"
    networks:
      - paqueteria_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  redis:
    image: redis:7.0-alpine
    container_name: paqueteria_v31_redis
    command: redis-server --maxmemory 64mb --maxmemory-policy allkeys-lru --maxclients 50
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    networks:
      - paqueteria_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.2'

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: paqueteria_v31_app
    environment:
      - DATABASE_URL=postgresql://paqueteria_user:${POSTGRES_PASSWORD}@postgres:5432/paqueteria
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - SMTP_HOST=taylor.mxrouting.net
      - SMTP_PORT=587
      - SMTP_USER=guia@papyrus.com.co
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM_NAME=PAQUETES EL CLUB
      - LIWA_API_KEY=${LIWA_API_KEY}
      - LIWA_PHONE_NUMBER=${LIWA_PHONE_NUMBER}
      # Optimizaciones para desarrollo
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - ENVIRONMENT=development
    volumes:
      # Vol√∫menes para desarrollo - cambios en tiempo real
      - ./src:/app/src
      - ./templates:/app/templates
      - ./static:/app/static
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./database:/app/database
      - ./SCRIPTS:/app/SCRIPTS
      - ./TEST:/app/TEST
      - ../docs:/app/docs
      - ./monitoring:/app/monitoring
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini
      - ./requirements.txt:/app/requirements.txt
      - ./requirements-dev.txt:/app/requirements-dev.txt
      - ./config.py:/app/config.py
      - ./main.py:/app/main.py
    ports:
      - "8001:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - paqueteria_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: paqueteria_v31_celery_worker
    command: celery -A src.celery_app worker --loglevel=info --concurrency=2
    environment:
      - DATABASE_URL=postgresql://paqueteria_user:${POSTGRES_PASSWORD}@postgres:5432/paqueteria
      - REDIS_URL=redis://redis:6379/0
      - SMTP_HOST=taylor.mxrouting.net
      - SMTP_PORT=587
      - SMTP_USER=guia@papyrus.com.co
      - SMTP_PASSWORD=90@5fmCU%gabP4%*
      - LIWA_API_KEY=${LIWA_API_KEY}
      - ENVIRONMENT=development
    volumes:
      - ./src:/app/src
      - ./templates:/app/templates
      - ./static:/app/static
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./database:/app/database
      - ./SCRIPTS:/app/SCRIPTS
      - ./TEST:/app/TEST
      - ../docs:/app/docs
      - ./monitoring:/app/monitoring
      - ./alembic:/app/alembic
      - ./alembic.ini:/app/alembic.ini
      - ./requirements.txt:/app/requirements.txt
      - ./requirements-dev.txt:/app/requirements-dev.txt
      - ./config.py:/app/config.py
      - ./main.py:/app/main.py
    depends_on:
      - postgres
      - redis
    networks:
      - paqueteria_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.3'

  nginx:
    image: nginx:alpine
    container_name: paqueteria_v31_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./uploads:/var/www/uploads
      - ./static:/var/www/static
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - paqueteria_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 32M
          cpus: '0.2'

volumes:
  postgres_data:
  redis_data:

networks:
  paqueteria_network:
    driver: bridge
